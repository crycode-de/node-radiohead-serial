name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - "*"
        tags:
            # normal versions
            - "v[0-9]+.[0-9]+.[0-9]+"
            # pre-releases
            - "v[0-9]+.[0-9]+.[0-9]+-**"
    pull_request: {}

jobs:
    # Performs quick checks before the expensive test runs
    check-and-lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: 22.x

            - name: Install dependencies
              run: npm ci

            - name: Perform a type check/build
              run: npm run build
              env:
                  CI: true

            - name: Lint source code
              run: npm run lint

    # Runs tests on all supported node versions and OSes
    tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [check-and-lint]

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [20.x, 22.x, 24.x]
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: npm ci

            - name: Create a clean build
              run: npm run build

            - name: Perform a type check on examples to test them (ubuntu only)
              if: startsWith(matrix.os, 'ubuntu')
              run: npm run examples-build-check -- --noEmit
              env:
                  CI: true

            - name: Run tests (ubuntu only)
              if: startsWith(matrix.os, 'ubuntu')
              run: |
                  sudo apt-get install -y socat
                  npm run test

            - name: Run tests (macos only)
              if: startsWith(matrix.os, 'macos')
              run: |
                  brew install socat
                  npm run test

    # Deploys the final package to NPM
    deploy:
        permissions:
            contents: write
            id-token: write
        needs: [tests]

        # Trigger this step only when a commit on master is tagged with a version number
        if: |
            contains(github.event.head_commit.message, '[skip ci]') == false &&
            github.event_name == 'push' &&
            startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js 22.x and configure npm registry
              uses: actions/setup-node@v4
              with:
                  node-version: 22.x
                  registry-url: 'https://registry.npmjs.org'

            - name: Extract the version and commit body from the tag
              id: extract_release
              # The body may be multiline, therefore newlines and % need to be escaped
              run: |
                  VERSION="${{ github.ref }}"
                  VERSION=${VERSION##*/v}
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                  git show -s --format=%b > .gh-release-notes.txt

            - name: Install dependencies
              run: npm ci

            - name: Create a clean build
              run: npm run build

            - name: Publish package to npm
              run: |
                  npm publish --provenance

            - name: Create Github Release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                  body_path: .gh-release-notes.txt
                  name: Release v${{ steps.extract_release.outputs.VERSION }}
                  # Prerelease versions create prereleases on Github
                  prerelease: ${{ contains(steps.extract_release.outputs.VERSION, '-') }}
                  generate_release_notes: true
                  files: |
                      radiohead-serial-${{ steps.extract_release.outputs.VERSION }}.tgz
